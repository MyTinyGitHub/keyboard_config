#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,matrix-transform = &imprint_function_row_full_bottom_row; };

    behaviors {
        kp_150ms: kp_150ms {
            compatible = "zmk,behavior-hold-tap";
            label = "KP_150MS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
        };

        word_caps: word_caps {
            compatible = "zmk,behavior-caps-word";
            label = "WORD_CAPS";
            #binding-cells = <0>;
            continue-list = <UNDERSCORE MINUS DOT>;
        };

        hold_tap: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
        };

        kp_170ms: kp_170ms {
            compatible = "zmk,behavior-hold-tap";
            label = "KP_170MS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <170>;
            flavor = "balanced";
        };

        hold_tap_one_shot: hold_tap_one_shot {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP_ONE_SHOT";
            bindings = <&kp>, <&sk_2s>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <18 19 20 21 22 23 30 31 32 33 34 35 42 43 44 45 46 47 54 55 56 57 58 59 65 66 67 68 69 6 7 8 9 10 11>;
        };

        sk_2s: sk_2s {
            compatible = "zmk,behavior-sticky-key";
            label = "modifiers sticky key";
            bindings = <&kp>;
            #binding-cells = <1>;
            release-after-ms = <2000>;
        };

        left_par_shift_less_then: left_par_shift_less_then {
            compatible = "zmk,behavior-mod-morph";
            label = "LEFT_PAR_SHIFT_LESS_THEN";
            bindings = <&kp LEFT_PARENTHESIS>, <&kp LESS_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        right_par_shift_greater_then: u {
            compatible = "zmk,behavior-mod-morph";
            label = "Y";
            bindings = <&kp RIGHT_PARENTHESIS>, <&kp GREATER_THAN>;

            #binding-cells = <0>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    combos {
        compatible = "zmk,combos";

        word_caps {
            bindings = <&caps_word>;
            key-positions = <76 81>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none  &none                 &none                 &none              &none                   &none                                                       &none               &none                   &none              &none                 &none                 &none
&none  &kp N1                &kp N2                &kp N3             &kp N4                  &kp N5                                                      &kp N6              &kp N7                  &kp N8             &kp N9                &kp N0                &none
&none  &kp Z                 &kp Y                 &kp U              &kp O                   &kp SEMICOLON                                               &kp Q               &kp L                   &kp D              &kp P                 &kp X                 &none
&kp W  &kp_170ms LEFT_WIN C  &kp_150ms LEFT_ALT I  &kp_150ms LCTRL E  &kp_150ms LEFT_SHIFT A  &kp COMMA                                                   &kp K               &kp_150ms LEFT_SHIFT H  &kp_150ms LCTRL T  &kp_150ms LEFT_ALT N  &kp_170ms LEFT_WIN S  &kp F
&none  &kp SQT               &kp MINUS             &kp EQUAL          &kp PERIOD              &kp SLASH                                                   &kp J               &kp M                   &kp G              &kp B                 &kp V                 &none
&none  &kp NON_US_BACKSLASH  &kp LEFT_BRACKET      &kp RIGHT_BRACKET  &kp GRAVE                                                                                               &none                   &none              &none                 &none                 &none
                                                                      &hold_tap 1 ESCAPE      &left_par_shift_less_then  &right_par_shift_greater_then    &kp HOME            &kp END                 &hold_tap 1 ENTER
                                                                      &hold_tap 2 SPACE       &kp TAB                    &kp INS                          &hold_tap 5 DELETE  &kp BACKSPACE           &hold_tap 3 R
            >;
        };

        Extended_Layer {
            bindings = <
&trans  &trans                                &trans                                &trans                                 &trans                            &trans               &trans         &trans         &trans    &trans      &trans           &trans
&trans  &kp F1                                &kp F2                                &kp F3                                 &kp F4                            &kp F5               &kp F6         &kp F7         &kp F8    &kp F9      &kp F10          &trans
&trans  &kp ESC                               &kp K_BACK                            &kp K_FIND                             &kp K_FORWARD                     &trans               &kp PG_UP      &kp HOME       &kp UP    &kp END     &kp CAPSLOCK     &trans
&trans  &hold_tap_one_shot LEFT_GUI LEFT_GUI  &hold_tap_one_shot LEFT_ALT LEFT_ALT  &hold_tap_one_shot LCTRL LEFT_CONTROL  &hold_tap_one_shot LSHIFT LSHIFT  &trans               &kp PAGE_DOWN  &kp LEFT       &kp DOWN  &kp RIGHT   &kp DELETE       &trans
&trans  &kp LC(Z)                             &kp LC(X)                             &kp LC(C)                              &trans                            &kp LC(V)            &kp ENTER      &kp BACKSPACE  &kp TAB   &kp K_MENU  &kp PRINTSCREEN  &trans
&trans  &trans                                &trans                                &trans                                 &trans                                                                &trans         &trans    &trans      &trans           &trans
                                                                                                                           &trans                            &trans     &trans    &trans         &trans         &trans
                                                                                                                           &trans                            &trans     &trans    &trans         &trans         &trans
            >;
        };

        number_layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans           &trans           &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans           &trans           &trans           &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans  &trans
&trans  &trans  &trans  &trans  &trans                            &kp KP_NUMBER_0  &trans           &trans           &trans  &trans
                                &trans  &trans  &trans    &trans  &trans           &trans
                                &trans  &trans  &trans    &trans  &trans           &trans
            >;
        };

        symbols_layer {
            bindings = <
&trans           &trans            &trans                &trans                 &trans             &trans                        &trans             &trans         &trans  &trans     &trans     &trans
&kp GRAVE        &kp LEFT_BRACKET  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp RIGHT_BRACKET  &kp PERIOD                    &kp GRAVE          &trans         &trans  &trans     &trans     &trans
&kp EXCLAMATION  &kp COMMA         &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp SEMICOLON      &kp QUESTION                  &kp DOUBLE_QUOTES  &trans         &trans  &trans     &trans     &trans
&kp HASH         &kp CARET         &kp EQUAL             &kp UNDERSCORE         &kp DOLLAR         &kp ASTERISK                  &kp SQT            &kp BACKSPACE  &trans  &kp SPACE  &kp ENTER  &trans
&kp TILDE        &kp LESS_THAN     &kp PIPE              &kp MINUS              &kp GREATER_THAN   &kp SLASH                     &trans             &kp DELETE     &trans  &trans     &trans     &trans
&trans           &kp AMPERSAND     &kp SQT               &kp DOUBLE_QUOTES      &kp PLUS                                                            &trans         &trans  &trans     &trans     &trans
                                                                                &kp BACKSLASH      &kp PERIOD    &kp ASTERISK    &trans             &trans         &trans
                                                                                &kp PERCENT        &kp COLON     &kp AT_SIGN     &trans             &trans         &trans
            >;
        };

        Auto_Mouse_Layer {
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans            &trans     &trans                 &trans     &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans     &trans                 &trans     &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans     &trans                 &trans     &trans  &trans  &trans
&trans  &trans  &mkp RCLK  &mkp MCLK  &mkp LCLK  &trans            &trans     &trans                 &trans     &trans  &trans  &trans
&trans  &trans  &mkp MB4   &lt 1 D    &mkp MB5   &trans            &trans     &trans                 &trans     &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans                                  &trans                 &trans     &trans  &trans  &trans
                                      &trans     &trans  &trans    &mkp LCLK  &mkp MCLK              &mkp RCLK
                                      &trans     &trans  &trans    &mkp MB4   &hold_tap 1 BACKSPACE  &mkp MB5
            >;
        };

        Keyboard_Control_Layer {
            bindings = <
&trans       &trans        &trans        &trans        &trans        &trans                  &trans           &trans           &trans           &trans           &trans           &trans
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4            &trans           &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &trans           &trans           &trans
&sys_reset   &trans        &trans        &trans        &trans        &trans                  &rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &sys_reset
&bootloader  &trans        &trans        &trans        &trans        &trans                  &trans           &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &bootloader
&to 0        &trans        &trans        &trans        &trans        &trans                  &trans           &trans           &trans           &trans           &trans           &to 0
&to 0        &trans        &trans        &trans        &trans                                                 &trans           &trans           &trans           &trans           &to 0
                                                       &trans        &trans        &trans    &trans           &trans           &trans
                                                       &trans        &trans        &trans    &trans           &trans           &trans
            >;
        };
    };
};

&trackball_peripheral_listener {
    input-processors = <&zip_temp_layer 4 500>;

    scroller {
        layers = <1>;
        input-processors =
            <&zip_xy_scaler 1 3>,
            <&zip_xy_to_scroll_mapper>,
            <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;
    };
};
