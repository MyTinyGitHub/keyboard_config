#include <input/processors.dtsi>
#include <dt-bindings/zmk/input_transform.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen { zmk,matrix-transform = &imprint_function_row_full_bottom_row; };

    rgb {
        layers=<&Numpad_Nav_Layer>;
        Numpad_Nav_Layer {
            rgb=<0xff, 0x00, 0x00>
        }
    };
    behaviors {
        hrm: hrm {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "tap-preferred";
            hold-trigger-key-positions = <37 38 39 40 43 44 45 46>;
        };

        word_caps: word_caps {
            compatible = "zmk,behavior-caps-word";
            label = "WORD_CAPS";
            #binding-cells = <0>;
            continue-list = <UNDERSCORE MINUS DOT>;
        };

        hold_tap: hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOLD_TAP";
            bindings = <&mo>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
        };
    };

    combos {
        compatible = "zmk,combos";

        word_caps {
            bindings = <&caps_word>;
            key-positions = <52 55>;
        };

        enter_combo {
            bindings = <&kp ENTER>;
            key-positions = <28 31>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none       &none                 &none            &none                  &none              &none                     &none   &none               &none         &none             &none            &none
&kp GRAVE   &kp N1                &kp N2           &kp N3                 &kp N4             &kp N5                    &kp N6  &kp N7              &kp N8        &kp N9            &kp N0           &kp EQUAL
&kp AMPS    &kp SQT               &kp COMMA        &kp PERIOD             &kp P              &kp Y                     &kp F   &kp G               &kp C         &kp R             &kp L            &kp SLASH
&kp ESCAPE  &hrm LGUI A           &hrm LEFT_ALT O  &hrm LCTRL E           &hrm LEFT_SHIFT U  &kp I                     &kp D   &hrm RIGHT_SHIFT H  &hrm RCTRL T  &hrm RIGHT_ALT N  &hrm RGUI S      &kp MINUS
&kp HASH    &kp SEMICOLON         &kp Q            &kp J                  &kp K              &kp X                     &kp B   &kp M               &kp W         &kp V             &kp Z            &kp NON_US_BACKSLASH
&kp CARET   &kp LEFT_PARENTHESIS  &kp PERCENT      &kp RIGHT_PARENTHESIS  &kp DOLLAR                                           &kp LEFT_BRACE      &kp LBKT      &kp RBKT          &kp RIGHT_BRACE  &kp ASTERISK
                                                                          &hold_tap 1 SPACE  &kp BACKSPACE  &kp ESC    &none   &kp TAB             &kp DELETE
                                                                          &kp ESCAPE         &none          &none      &mo 2   &mo 1               &kp ENTER
            >;
        };

        Numpad_Nav_Layer {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans    &trans    &trans     &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans            &trans  &trans    &trans    &trans     &trans  &trans
&trans  &trans  &kp N7  &kp N8  &kp N9  &trans            &trans  &kp HOME  &kp UP    &kp END    &trans  &trans
&trans  &trans  &kp N4  &kp N5  &kp N6  &trans            &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans  &trans
&trans  &trans  &kp N1  &kp N2  &kp N3  &trans            &trans  &trans    &trans    &trans     &trans  &trans
&trans  &trans  &trans  &kp N0  &trans                            &trans    &trans    &trans     &trans  &trans
                                &trans  &trans  &trans    &trans  &trans    &trans
                                &trans  &trans  &trans    &trans  &trans    &trans
            >;
        };

        Keyboard_Control_Layer {
            bindings = <
&trans       &trans        &trans        &trans        &trans        &trans                  &trans           &trans           &trans           &trans           &trans           &trans
&bt BT_CLR   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4            &trans           &rgb_ug RGB_TOG  &rgb_ug RGB_EFF  &trans           &trans           &trans
&sys_reset   &trans        &trans        &trans        &trans        &trans                  &rgb_ug RGB_TOG  &rgb_ug RGB_HUI  &rgb_ug RGB_SAI  &rgb_ug RGB_BRI  &rgb_ug RGB_SPI  &sys_reset
&bootloader  &trans        &trans        &trans        &trans        &trans                  &trans           &rgb_ug RGB_HUD  &rgb_ug RGB_SAD  &rgb_ug RGB_BRD  &rgb_ug RGB_SPD  &bootloader
&to 4        &trans        &trans        &trans        &trans        &trans                  &trans           &trans           &trans           &trans           &trans           &to 4
&to 4        &trans        &trans        &trans        &trans                                                 &trans           &trans           &trans           &trans           &to 4
                                                       &trans        &trans        &trans    &trans           &trans           &trans
                                                       &trans        &trans        &trans    &trans           &trans           &trans
            >;
        };

        Auto_Mouse_Layer {
            bindings = <
&trans  &trans  &trans     &trans     &trans     &trans            &trans     &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans     &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans     &trans     &trans     &trans  &trans  &trans
&trans  &trans  &mkp RCLK  &mkp MCLK  &mkp LCLK  &trans            &trans     &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans     &trans            &trans     &trans     &trans     &trans  &trans  &trans
&trans  &trans  &trans     &trans     &trans                                  &trans     &trans     &trans  &trans  &trans
                                      &trans     &trans  &trans    &mkp LCLK  &mkp MCLK  &mkp RCLK
                                      &trans     &trans  &trans    &mkp MB4   &trans     &mkp MB5
            >;
        };
    };
};

// right hand trackball configuration

&trackball_peripheral_listener {
    input-processors =
        // activate layer 3 within 500ms of the trackball moving,,,,,
        <&zip_temp_layer 3 500>;

    scroller {
        layers = <1>;
        input-processors =
            <&zip_xy_scaler 1 3>,
            <&zip_xy_to_scroll_mapper>,
            <&zip_scroll_transform INPUT_TRANSFORM_Y_INVERT>;
    };
};
